<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- service -->
	<bean id="userService" class="com.yuzhou.service.impl.UserServiceImpl"></bean>
	<bean id="orderServoce" class="com.yuzhou.service.impl.OrderServiceImpl"></bean>
	
	<!-- advice -->
	<bean id="logArgsAdvice" class="com.yuzhou.advice.LogArgsAdvice"></bean>
	<bean id="logResultAdvice" class="com.yuzhou.advice.LogResultAdvice"></bean>
	
	<!-- 定义一个只拦截queryUser方法的advisor -->
	<bean id="logArgsAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<!-- advisor内部会有一个advice -->
		<property name="advice" ref="logArgsAdvice"></property>
		<!-- 只有指定方法会被拦截 -->
		<property name="pattern" value="com.yuzhou.*.service.*.create.*"></property>
	</bean>
	
	<!-- 定义第二个只拦截queryUser方法的advisor -->
	<bean id="logResultAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<!-- advisor内部会有一个advice -->
		<property name="advice" ref="logResultAdvice"></property>
		<!-- 只有指定方法会被拦截 -->
		<property name="pattern" value="com.yuzhou.*.service.*.query.*"></property>
	</bean>
	
	<!-- 定义加载所有的advisor -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>
</beans>
